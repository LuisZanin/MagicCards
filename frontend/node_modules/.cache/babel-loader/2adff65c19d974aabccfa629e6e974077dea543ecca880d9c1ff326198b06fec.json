{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bflav\\\\Desktop\\\\desafiobim2\\\\MagicCards\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../services/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [decks, setDecks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Verificar se o usuário está autenticado\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      navigate('/');\n      return;\n    }\n\n    // Buscar decks\n    const fetchDecks = async () => {\n      try {\n        const response = await axiosInstance.get('/decks');\n        setDecks(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar decks:', error);\n      }\n    };\n    fetchDecks();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container min-h-screen bg-gray-900 text-white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"dywXXGOj1RPxKqEzuVHHXTV+fsg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosInstance","jsxDEV","_jsxDEV","Dashboard","_s","decks","setDecks","navigate","token","localStorage","getItem","fetchDecks","response","get","data","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bflav/Desktop/desafiobim2/MagicCards/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../services/axiosInstance';\r\n\r\nconst Dashboard = () => {\r\n  const [decks, setDecks] = useState<any[]>([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Verificar se o usuário está autenticado\r\n    const token = localStorage.getItem('authToken');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    // Buscar decks\r\n    const fetchDecks = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/decks');\r\n        setDecks(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar decks:', error);\r\n      }\r\n    };\r\n\r\n    fetchDecks();\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container min-h-screen bg-gray-900 text-white\">\r\n      {/* Conteúdo do dashboard */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC;EAC7C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,GAAG,CAAC;MACb;IACF;;IAEA;IACA,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,aAAa,CAACa,GAAG,CAAC,QAAQ,CAAC;QAClDP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKe,SAAS,EAAC;EAAyD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,SAAS;EAAA,QAEIJ,WAAW;AAAA;AAAAuB,EAAA,GAFxBnB,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}