{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bflav\\\\Desktop\\\\desafiobim2\\\\MagicCards\\\\frontend\\\\src\\\\pages\\\\CreateDeck.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateDeck = () => {\n  _s();\n  const [deckName, setDeckName] = useState('');\n  const [cards, setCards] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const handleCreateDeck = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/decks', {\n        name: deckName,\n        cards: selectedCards\n      });\n      console.log('Deck criado com sucesso:', response.data);\n    } catch (error) {\n      console.error('Erro ao criar o deck:', error);\n    }\n  };\n  const fetchCards = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/cards');\n      setCards(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar cartas:', error);\n    }\n  };\n  const handleCardSelect = card => {\n    setSelectedCards([...selectedCards, card]);\n  };\n  React.useEffect(() => {\n    fetchCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-4xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-6 text-orange-500\",\n      children: \"Criar um Novo Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateDeck,\n      className: \"bg-black p-8 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-semibold text-orange-500 mb-2\",\n          htmlFor: \"deckName\",\n          children: \"Nome do Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"deckName\",\n          type: \"text\",\n          placeholder: \"Digite o nome do deck\",\n          className: \"w-full px-4 py-2 border border-gray-600 rounded-lg text-gray-300 bg-gray-800 focus:outline-none focus:ring-2 focus:ring-orange-500\",\n          value: deckName,\n          onChange: e => setDeckName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-semibold text-orange-500 mb-2\",\n          children: \"Selecione Cartas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-container overflow-y-scroll max-h-80 border border-gray-600 p-4\",\n          children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-item flex items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-300 mr-4\",\n              children: card.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"bg-orange-500 hover:bg-orange-600 text-white py-1 px-2 rounded transition duration-300\",\n              onClick: () => handleCardSelect(card),\n              children: \"Selecionar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300\",\n        children: \"Criar Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateDeck, \"2bZDts9Bo3A9xwEs/uRV9DROW+8=\");\n_c = CreateDeck;\nexport default CreateDeck;\nvar _c;\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateDeck","_s","deckName","setDeckName","cards","setCards","selectedCards","setSelectedCards","handleCreateDeck","e","preventDefault","response","post","name","console","log","data","error","fetchCards","get","handleCardSelect","card","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bflav/Desktop/desafiobim2/MagicCards/frontend/src/pages/CreateDeck.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface Card {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nconst CreateDeck = () => {\r\n  const [deckName, setDeckName] = useState('');\r\n  const [cards, setCards] = useState<Card[]>([]);\r\n  const [selectedCards, setSelectedCards] = useState<Card[]>([]);\r\n\r\n  const handleCreateDeck = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/decks', {\r\n        name: deckName,\r\n        cards: selectedCards,\r\n      });\r\n      console.log('Deck criado com sucesso:', response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao criar o deck:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCards = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/cards'); \r\n      setCards(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar cartas:', error);\r\n    }\r\n  };\r\n\r\n  const handleCardSelect = (card: Card) => {\r\n    setSelectedCards([...selectedCards, card]);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchCards();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 max-w-4xl\">\r\n      <h2 className=\"text-4xl font-bold mb-6 text-orange-500\">Criar um Novo Deck</h2>\r\n      <form onSubmit={handleCreateDeck} className=\"bg-black p-8 rounded-lg shadow-md\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-semibold text-orange-500 mb-2\" htmlFor=\"deckName\">\r\n            Nome do Deck\r\n          </label>\r\n          <input\r\n            id=\"deckName\"\r\n            type=\"text\"\r\n            placeholder=\"Digite o nome do deck\"\r\n            className=\"w-full px-4 py-2 border border-gray-600 rounded-lg text-gray-300 bg-gray-800 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n            value={deckName}\r\n            onChange={(e) => setDeckName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-semibold text-orange-500 mb-2\">\r\n            Selecione Cartas\r\n          </label>\r\n          <div className=\"cards-container overflow-y-scroll max-h-80 border border-gray-600 p-4\">\r\n            {cards.map((card) => (\r\n              <div key={card.id} className=\"card-item flex items-center mb-2\">\r\n                <span className=\"text-gray-300 mr-4\">{card.name}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-orange-500 hover:bg-orange-600 text-white py-1 px-2 rounded transition duration-300\"\r\n                  onClick={() => handleCardSelect(card)}\r\n                >\r\n                  Selecionar\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300\"\r\n        >\r\n          Criar Deck\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDeck;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}