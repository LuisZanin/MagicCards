{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bflav\\\\Desktop\\\\desafiobim2\\\\MagicCards\\\\frontend\\\\src\\\\components\\\\DeckList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DeckCard from './DeckCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeckList = () => {\n  _s();\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const fetchDecks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/decks');\n        setDecks(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar decks:', error);\n      }\n    };\n    fetchDecks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n    children: decks.map(deck => /*#__PURE__*/_jsxDEV(DeckCard, {\n      deck: deck\n    }, deck.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DeckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n_c = DeckList;\nexport default DeckList;\nvar _c;\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"names":["React","useEffect","useState","axios","DeckCard","jsxDEV","_jsxDEV","DeckList","_s","decks","setDecks","fetchDecks","response","get","data","error","console","className","children","map","deck","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bflav/Desktop/desafiobim2/MagicCards/frontend/src/components/DeckList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DeckCard from './DeckCard';\r\n\r\nconst DeckList = () => {\r\n  const [decks, setDecks] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDecks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/decks');\r\n        setDecks(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar decks:', error);\r\n      }\r\n    };\r\n\r\n    fetchDecks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n      {decks.map((deck) => (\r\n        <DeckCard key={deck.id} deck={deck} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAQ,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;QAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,uCAAuC;IAAAC,QAAA,EACnDT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA,CAACF,QAAQ;MAAegB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}