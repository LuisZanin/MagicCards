{"ast":null,"code":"import axios from 'axios';\n\n// Cria uma instância do Axios com o token JWT\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3000'\n});\n\n// Adiciona o token de autenticação ao cabeçalho das requisições\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/bflav/Desktop/desafiobim2/MagicCards/frontend/src/services/axiosInstance.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Cria uma instância do Axios com o token JWT\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n});\r\n\r\n// Adiciona o token de autenticação ao cabeçalho das requisições\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token && config.headers) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,IAAID,MAAM,CAACI,OAAO,EAAE;IAC3BJ,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}