{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bflav\\\\Desktop\\\\desafiobim2\\\\MagicCards\\\\frontend\\\\src\\\\pages\\\\ImportDeck.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportDeck = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n  const handleImportDeck = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Por favor, selecione um arquivo JSON.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:3000/decks/import', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Deck importado com sucesso:', response.data);\n    } catch (error) {\n      console.error('Erro ao importar o deck:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-4xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-6 text-orange-500\",\n      children: \"Importar um Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleImportDeck,\n      className: \"bg-black p-8 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-semibold text-orange-500 mb-2\",\n          htmlFor: \"file\",\n          children: \"Importar Arquivo JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file\",\n          type: \"file\",\n          accept: \".json\",\n          className: \"w-full px-4 py-2 border border-gray-600 rounded-lg text-gray-300 bg-gray-800 focus:outline-none focus:ring-2 focus:ring-orange-500\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300\",\n        children: \"Importar Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportDeck, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ImportDeck;\nexport default ImportDeck;\nvar _c;\n$RefreshReg$(_c, \"ImportDeck\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImportDeck","_s","file","setFile","handleFileChange","e","target","files","handleImportDeck","preventDefault","alert","formData","FormData","append","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bflav/Desktop/desafiobim2/MagicCards/frontend/src/pages/ImportDeck.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImportDeck = () => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleImportDeck = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      alert('Por favor, selecione um arquivo JSON.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/decks/import', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('Deck importado com sucesso:', response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao importar o deck:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 max-w-4xl\">\r\n      <h2 className=\"text-4xl font-bold mb-6 text-orange-500\">Importar um Deck</h2>\r\n      <form onSubmit={handleImportDeck} className=\"bg-black p-8 rounded-lg shadow-md\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-semibold text-orange-500 mb-2\" htmlFor=\"file\">\r\n            Importar Arquivo JSON\r\n          </label>\r\n          <input\r\n            id=\"file\"\r\n            type=\"file\"\r\n            accept=\".json\"\r\n            className=\"w-full px-4 py-2 border border-gray-600 rounded-lg text-gray-300 bg-gray-800 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n            onChange={handleFileChange}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-orange-500 hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300\"\r\n        >\r\n          Importar Deck\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportDeck;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMQ,gBAAgB,GAAIC,CAAsC,IAAK;IACnE,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACvCJ,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOH,CAAkB,IAAK;IACrDA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACP,IAAI,EAAE;MACTQ,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,oCAAoC,EAAEJ,QAAQ,EAAE;QAChFK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CvB,OAAA;MAAIsB,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7E3B,OAAA;MAAM4B,QAAQ,EAAEnB,gBAAiB;MAACa,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAC7EvB,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBvB,OAAA;UAAOsB,SAAS,EAAC,kDAAkD;UAACO,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAEnF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR3B,OAAA;UACE8B,EAAE,EAAC,MAAM;UACTC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,OAAO;UACdV,SAAS,EAAC,oIAAoI;UAC9IW,QAAQ,EAAE5B;QAAiB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QACE+B,IAAI,EAAC,QAAQ;QACbT,SAAS,EAAC,4GAA4G;QAAAC,QAAA,EACvH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CAxDID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}